{"version":3,"sources":["media/sample.mp3","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","__webpack_require__","p","FoundationSetup","react_default","a","createElement","className","this","props","width","children","Component","Header","App_FoundationSetup","src","logo","alt","ComingSoon","ListenToSample","controls","sample","type","App","App_Header","App_ComingSoon","App_ListenToSample","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sRCOlCC,0LAEF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAUC,KAAKC,MAAMC,MAAQF,KAAKC,MAAMC,MAAQ,MAAO,yBACpEF,KAAKC,MAAME,kBALMC,cAYxBC,mLAGF,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,2CAINF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAlB,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAMT,UAAU,qBAAqBU,IAAI,mBAGzDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAAlB,qBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAxBJK,aAkCfM,mLAGF,OACEd,EAAAC,EAAAC,cAACQ,EAAD,CAAiBJ,MAAM,KACrBN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,yCALiBK,aAWnBO,mLAGF,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,wCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOc,UAAQ,GACXhB,EAAAC,EAAAC,cAAA,UAAQS,IAAKM,IAAQC,KAAK,eAD9B,8DARiBV,aAmCdW,mLAVX,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,cAPUd,mBC1EEe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInB3C,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.06917a0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.d362008d.mp3\";","import React, { Component } from 'react';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport logo from './logo.svg';\nimport sample from './media/sample.mp3';\nimport './App.scss';\nimport $ from 'jquery';\n\nclass FoundationSetup extends Component {\n  render(){\n    return (\n      <div className=\"row\">\n          <div className={\"small-\"+(this.props.width ? this.props.width : \"11\") +\" cell small-centered \"}> \n            {this.props.children}\n          </div>\n        </div>\n      )\n  }\n}\n\nclass Header extends Component {\n  render(){\n\n    return(\n      <div className=\"top\">\n        <div className=\"top-shape-heading-rectangle\">\n          <FoundationSetup>\n            <div className=\"heading\">\n              <h2>Disappointing Your Parents</h2>\n            </div>\n          </FoundationSetup>\n        </div>\n        <div className=\"logo-container\">\n           <div className=\"flex podcast-button-container\">\n            <button className=\"button apple-podcasts\">Apple Podcasts</button>\n          </div>\n          <div className=\"flex image-container\">\n              <div className=\"podcast-logo\">\n                <img src={logo} className=\"podcast-logo-image\" alt=\"podcast logo\"/>\n              </div>\n          </div>\n          <div className=\"flex podcast-button-container\">\n              <button className=\"button spotify-podcasts\">Spotify Podcasts</button>\n          </div>\n          <div className=\"top-shape-heading-triangle\">\n          </div>\n        </div>\n       \n        \n      </div>\n      );\n  }\n}\n\nclass ComingSoon extends Component {\n  render(){\n    \n    return(\n      <FoundationSetup width=\"4\">\n        <h3 className=\"coming-soon\"> A new podcast, coming soon! </h3>\n      </FoundationSetup>\n    );\n  }\n}\n\nclass ListenToSample extends Component {\n  render(){\n\n    return(\n      <div className=\"row\">\n        <div className=\"sample\">\n          <h4 className=\"sample coming-soon\">Listen to the sample in the meantime</h4>\n          <div className=\"sample\">\n            <audio controls>\n                <source src={sample} type=\"audio/mpeg\"/>\n              Your browser does not support the audio element.\n            </audio>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\nclass App extends Component {\n\n  render(){\n    return(\n      <div>\n        <Header/>\n        <ComingSoon/>\n        <ListenToSample/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './index.css';\nimport App from './App';\nimport 'normalize.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.436acc6a.svg\";"],"sourceRoot":""}